{"ast":null,"code":"var _jsxFileName = \"/Users/vessib/Desktop/Veff2LargeAssignment3/bubblify/src/components/Bundles/index.js\";\nimport React from 'react';\nimport BundleList from './../BundleList';\nimport { getBubbleBundles, getBubbles } from '../../services/bundleService';\nimport { cartPrompt, addItemToCart } from '../../services/cartService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Bundles extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      bundles: [],\n      bubbles: bubbles\n    };\n  }\n\n  async componentDidMount() {\n    const bundles = await getBubbleBundles();\n    const bundlesArr = [];\n\n    for (const key of Object.keys(bundles)) {\n      bundlesArr.push(bundles[key]);\n    }\n\n    ;\n    const bubbles = await getBubbles();\n    this.setState({\n      bundles: bundlesArr,\n      loading: false,\n      bubbles: bubbles\n    });\n  }\n\n  render() {\n    const {\n      bundles\n    } = this.state;\n    console.log(this.state);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(BundleList, {\n          bundles: bundles\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 23\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/vessib/Desktop/Veff2LargeAssignment3/bubblify/src/components/Bundles/index.js"],"names":["React","BundleList","getBubbleBundles","getBubbles","cartPrompt","addItemToCart","Bundles","Component","state","loading","bundles","bubbles","componentDidMount","bundlesArr","key","Object","keys","push","setState","render","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,SAASC,gBAAT,EAA2BC,UAA3B,QAA6C,8BAA7C;AACA,SAASC,UAAT,EAAqBC,aAArB,QAA0C,4BAA1C;;AAEA,eAAe,MAAMC,OAAN,SAAsBN,KAAK,CAACO,SAA5B,CAAsC;AAAA;AAAA;AAAA,SACjDC,KADiD,GACzC;AACJC,MAAAA,OAAO,EAAE,IADL;AAEJC,MAAAA,OAAO,EAAE,EAFL;AAGJC,MAAAA,OAAO,EAAEA;AAHL,KADyC;AAAA;;AAQ1B,QAAjBC,iBAAiB,GAAG;AACtB,UAAMF,OAAO,GAAG,MAAMR,gBAAgB,EAAtC;AACA,UAAMW,UAAU,GAAG,EAAnB;;AACA,SAAK,MAAMC,GAAX,IAAkBC,MAAM,CAACC,IAAP,CAAYN,OAAZ,CAAlB,EAAwC;AACpCG,MAAAA,UAAU,CAACI,IAAX,CAAgBP,OAAO,CAACI,GAAD,CAAvB;AACH;;AAAA;AACD,UAAMH,OAAO,GAAG,MAAMR,UAAU,EAAhC;AAEA,SAAKe,QAAL,CAAc;AAAER,MAAAA,OAAO,EAAEG,UAAX;AAAuBJ,MAAAA,OAAO,EAAE,KAAhC;AAAuCE,MAAAA,OAAO,EAAEA;AAAhD,KAAd;AAEH;;AAEDQ,EAAAA,MAAM,GAAG;AACL,UAAM;AAAET,MAAAA;AAAF,QAAc,KAAKF,KAAzB;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAjB;AACA,wBACI;AAAA,gBACK,KAAKA,KAAL,CAAWC,OAAX,gBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,gBAEK;AAAA,+BACE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAIC;AAAvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAHV;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;;AAhCgD","sourcesContent":["import React from 'react';\nimport BundleList from './../BundleList';\nimport { getBubbleBundles, getBubbles } from '../../services/bundleService';\nimport { cartPrompt, addItemToCart } from '../../services/cartService';\n\nexport default class Bundles extends React.Component {\n    state = {\n        loading: true,\n        bundles: [],\n        bubbles: bubbles,\n            \n    };\n\n    async componentDidMount() {\n        const bundles = await getBubbleBundles();\n        const bundlesArr = [];\n        for (const key of Object.keys(bundles)) {\n            bundlesArr.push(bundles[key]);\n        };\n        const bubbles = await getBubbles();\n\n        this.setState({ bundles: bundlesArr, loading: false, bubbles: bubbles });\n\n    };\n\n    render() {\n        const { bundles } = this.state;\n        console.log(this.state);\n        return (\n            <div>\n                {this.state.loading ? \n                    <div>loading</div> \n                    : <div>\n                        <BundleList bundles= { bundles } />    \n                    </div>}\n            </div>\n        );\n    };\n}"]},"metadata":{},"sourceType":"module"}
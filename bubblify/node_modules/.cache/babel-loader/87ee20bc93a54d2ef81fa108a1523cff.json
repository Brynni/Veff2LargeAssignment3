{"ast":null,"code":"import * as constants from '../urlConstants';\nexport const getBubbleBundles = async () => {\n  const result = await fetch(constants.BUNDLES);\n\n  if (!result.ok) {\n    return [];\n  }\n\n  const bundles = await result.json();\n  const bubbles = await getBubbles();\n  const bundleGroup = {};\n\n  for (let i = 0; i < bundles.length; i++) {\n    const currentBundle = bundles[i];\n    const id = currentBundle.id;\n    bundleGroup[currentBundle.id] = { ...currentBundle,\n      bubbles: []\n    };\n\n    for (let j = 0; j < bundles[i].items.length; j++) {\n      let num = bundles[i].items[j] - 1;\n      bundleGroup[id].bubbles.push(bubbles[num]);\n    }\n  }\n\n  return bundleGroup;\n};\nexport const getBubbles = async () => {\n  const result = await fetch(constants.BUBBLES);\n\n  if (!result.ok) {\n    return [];\n  }\n\n  return result.json();\n};\nexport function getSingleBundle(bundles, bubbles) {\n  // console.log(bundles);\n  // console.log(bubbles);\n  const bundleGroup = {};\n  const currentBundle = bundles;\n  const id = currentBundle.id;\n  bundleGroup[currentBundle.id] = { ...currentBundle,\n    bubbles: []\n  };\n\n  for (let j = 0; j < bundles.items.length; j++) {\n    let num = bundles.items[j] - 1;\n    bundleGroup[id].bubbles.push(bubbles[num]);\n  }\n\n  return bundleGroup;\n}","map":{"version":3,"sources":["/Users/vessib/Desktop/Veff2LargeAssignment3/bubblify/src/services/bundleService/index.js"],"names":["constants","getBubbleBundles","result","fetch","BUNDLES","ok","bundles","json","bubbles","getBubbles","bundleGroup","i","length","currentBundle","id","j","items","num","push","BUBBLES","getSingleBundle"],"mappings":"AAAA,OAAO,KAAKA,SAAZ,MAA2B,iBAA3B;AAEA,OAAO,MAAMC,gBAAgB,GAAG,YAAY;AACxC,QAAMC,MAAM,GAAG,MAAMC,KAAK,CAACH,SAAS,CAACI,OAAX,CAA1B;;AACA,MAAG,CAACF,MAAM,CAACG,EAAX,EAAe;AAAE,WAAO,EAAP;AAAY;;AAC7B,QAAMC,OAAO,GAAG,MAAMJ,MAAM,CAACK,IAAP,EAAtB;AACA,QAAMC,OAAO,GAAG,MAAMC,UAAU,EAAhC;AACA,QAAMC,WAAW,GAAG,EAApB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAACL,OAAO,CAACM,MAA1B,EAAkCD,CAAC,EAAnC,EAAsC;AAClC,UAAME,aAAa,GAAGP,OAAO,CAACK,CAAD,CAA7B;AACA,UAAMG,EAAE,GAAGD,aAAa,CAACC,EAAzB;AACAJ,IAAAA,WAAW,CAACG,aAAa,CAACC,EAAf,CAAX,GAA+B,EAC3B,GAAGD,aADwB;AAE3BL,MAAAA,OAAO,EAAE;AAFkB,KAA/B;;AAIA,SAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,OAAO,CAACK,CAAD,CAAP,CAAWK,KAAX,CAAiBJ,MAArC,EAA6CG,CAAC,EAA9C,EAAiD;AAC7C,UAAIE,GAAG,GAAGX,OAAO,CAACK,CAAD,CAAP,CAAWK,KAAX,CAAiBD,CAAjB,IAAoB,CAA9B;AACAL,MAAAA,WAAW,CAACI,EAAD,CAAX,CAAgBN,OAAhB,CAAwBU,IAAxB,CAA6BV,OAAO,CAACS,GAAD,CAApC;AACH;AACJ;;AAED,SAAOP,WAAP;AACH,CApBM;AAuBP,OAAO,MAAMD,UAAU,GAAG,YAAW;AACjC,QAAMP,MAAM,GAAG,MAAMC,KAAK,CAACH,SAAS,CAACmB,OAAX,CAA1B;;AACA,MAAG,CAACjB,MAAM,CAACG,EAAX,EAAe;AAAE,WAAO,EAAP;AAAY;;AAC7B,SAAOH,MAAM,CAACK,IAAP,EAAP;AAEH,CALM;AAQP,OAAO,SAASa,eAAT,CAA0Bd,OAA1B,EAAmCE,OAAnC,EAA2C;AAC9C;AACA;AACA,QAAME,WAAW,GAAG,EAApB;AACA,QAAMG,aAAa,GAAGP,OAAtB;AACA,QAAMQ,EAAE,GAAGD,aAAa,CAACC,EAAzB;AACAJ,EAAAA,WAAW,CAACG,aAAa,CAACC,EAAf,CAAX,GAAgC,EAC5B,GAAGD,aADyB;AAE5BL,IAAAA,OAAO,EAAE;AAFmB,GAAhC;;AAIA,OAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,OAAO,CAACU,KAAR,CAAcJ,MAAlC,EAA0CG,CAAC,EAA3C,EAA8C;AAC1C,QAAIE,GAAG,GAAGX,OAAO,CAACU,KAAR,CAAcD,CAAd,IAAiB,CAA3B;AACAL,IAAAA,WAAW,CAACI,EAAD,CAAX,CAAgBN,OAAhB,CAAwBU,IAAxB,CAA6BV,OAAO,CAACS,GAAD,CAApC;AACH;;AAED,SAAOP,WAAP;AAEH","sourcesContent":["import * as constants from '../urlConstants';\n\nexport const getBubbleBundles = async () => {\n    const result = await fetch(constants.BUNDLES);\n    if(!result.ok) { return []; }\n    const bundles = await result.json();\n    const bubbles = await getBubbles();\n    const bundleGroup = {};\n    for (let i = 0; i<bundles.length; i++){\n        const currentBundle = bundles[i];\n        const id = currentBundle.id;\n        bundleGroup[currentBundle.id] ={\n            ...currentBundle,\n            bubbles: [],\n        }\n        for (let j = 0; j < bundles[i].items.length; j++){\n            let num = bundles[i].items[j]-1;\n            bundleGroup[id].bubbles.push(bubbles[num]);\n        }\n    }   \n\n    return bundleGroup;\n}\n\n\nexport const getBubbles = async() => {\n    const result = await fetch(constants.BUBBLES);\n    if(!result.ok) { return []; }\n    return result.json();\n\n}\n\n\nexport function getSingleBundle (bundles, bubbles){\n    // console.log(bundles);\n    // console.log(bubbles);\n    const bundleGroup = {};\n    const currentBundle = bundles;\n    const id = currentBundle.id;\n    bundleGroup[currentBundle.id] = {\n        ...currentBundle,\n        bubbles: [],\n    }\n    for (let j = 0; j < bundles.items.length; j++){\n        let num = bundles.items[j]-1;\n        bundleGroup[id].bubbles.push(bubbles[num]);\n    }\n\n    return bundleGroup;\n    \n}\n\n"]},"metadata":{},"sourceType":"module"}